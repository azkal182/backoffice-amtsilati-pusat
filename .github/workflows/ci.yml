name: CI/CD Next.js with Prisma

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: yarn install

      - name: Print DATABASE_URL
        run: echo ${{ secrets.DATABASE_URL }}

      - name: Run Prisma Migrations
        env:
          DATABASE_URL: "mysql://azkal:azkal@178.128.17.214:3306/backoffice"
          EDGE_STORE_ACCESS_KEY: ${{ secrets.EDGE_STORE_ACCESS_KEY }}
          EDGE_STORE_SECRET_KEY: ${{ secrets.EDGE_STORE_SECRET_KEY }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          AUTH_TRUST_HOST: ${{ secrets.AUTH_TRUST_HOST }}
        run: npx prisma migrate deploy || sleep 5 && npx prisma migrate deploy

      - name: Build Next.js application
        env:
          DATABASE_URL: "mysql://azkal:azkal@178.128.17.214:3306/backoffice"
          EDGE_STORE_ACCESS_KEY: ${{ secrets.EDGE_STORE_ACCESS_KEY }}
          EDGE_STORE_SECRET_KEY: ${{ secrets.EDGE_STORE_SECRET_KEY }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          AUTH_TRUST_HOST: ${{ secrets.AUTH_TRUST_HOST }}
        run: yarn build

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan 178.128.17.214 >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          ssh -tt root@178.128.17.214 << 'EOF'
            # Verifikasi bahwa direktori ada
            if [ ! -d "/root/project/backoffice" ]; then
              echo "Directory /root/project/backoffice does not exist."
              exit 1
            fi

            # Hentikan aplikasi yang berjalan (jika menggunakan PM2)
            if pm2 describe backoffice > /dev/null; then
              pm2 stop backoffice
            else
              echo "PM2 application 'backoffice' not found, skipping stop."
            fi

            # Hapus folder build lama
            rm -rf /root/project/backoffice/.next

            # Masuk ke folder deployment
            cd /root/project/backoffice/

            # Install dependencies
            yarn install

            # Pastikan skrip ada dan jalankan PM2
            pm2 start npm --name "backoffice" -- run start
          EOF

      - name: Copy build files to server
        run: |
          rsync -avz --delete .next/ root@178.128.17.214:/root/project/backoffice/.next/
          rsync -avz --delete package.json yarn.lock root@178.128.17.214:/root/project/backoffice/
